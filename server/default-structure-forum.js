import { Post } from "./db/models/postModel.js";
import { Topic } from "./db/models/topicModel.js";
import { User } from "./db/models/userModel.js";
import base64_encode from "./helpers/base64_encode.js"
import getToken from "./helpers/getToken.js";

const img = undefined

let posts = [
  {topicid:1, title: 'Язык программирования Python', body: 'Python — это высокоуровневый язык программирования общего назначения, который используется в том числе и для разработки веб-приложений. Язык ориентирован на повышение производительности разработчика и читаемости кода.Правильное русское произношение названия языка программирования — Пайтон, но чаще используется искажённое — Питон. Python поддерживает несколько парадигм программирования: структурное, объектно-ориентированное, функциональное, императивное и аспектно-ориентированное. В языке присутствет динамическая типизация, автоматическое управление памятью, полная интроспекция, механизм обработки исключений, поддержка многопоточных вычислений и удобные высокоуровневые структуры данных. Программный код на Python организовывается в функции и классы, которые могут объединяться в модули, а они в свою очередь могут быть объединены в пакеты. Python обычно используется как интерпретируемый, но может быть скомпилирован в байт-код Java и в MSIL (в рамках платфоры .NET). Разработчики языка Python придерживаются определённой философии программирования, называемой «The Zen of Python» («Дзен Питона» или «Дзен Пайтона»)', image: img, sessionid: 1},
  {topicid:1, title: 'Язык программирования Python2', body: 'Python — это высокоуровневый язык программирования общего назначения, который используется в том числе и для разработки веб-приложений. Язык ориентирован на повышение производительности разработчика и читаемости кода.Правильное русское произношение названия языка программирования — Пайтон, но чаще используется искажённое — Питон. Python поддерживает несколько парадигм программирования: структурное, объектно-ориентированное, функциональное, императивное и аспектно-ориентированное. В языке присутствет динамическая типизация, автоматическое управление памятью, полная интроспекция, механизм обработки исключений, поддержка многопоточных вычислений и удобные высокоуровневые структуры данных. Программный код на Python организовывается в функции и классы, которые могут объединяться в модули, а они в свою очередь могут быть объединены в пакеты. Python обычно используется как интерпретируемый, но может быть скомпилирован в байт-код Java и в MSIL (в рамках платфоры .NET). Разработчики языка Python придерживаются определённой философии программирования, называемой «The Zen of Python» («Дзен Питона» или «Дзен Пайтона»)', image: img, sessionid: 1},
  {topicid:1, title: 'Язык программирования Python3', body: 'Python — это высокоуровневый язык программирования общего назначения, который используется в том числе и для разработки веб-приложений. Язык ориентирован на повышение производительности разработчика и читаемости кода.Правильное русское произношение названия языка программирования — Пайтон, но чаще используется искажённое — Питон. Python поддерживает несколько парадигм программирования: структурное, объектно-ориентированное, функциональное, императивное и аспектно-ориентированное. В языке присутствет динамическая типизация, автоматическое управление памятью, полная интроспекция, механизм обработки исключений, поддержка многопоточных вычислений и удобные высокоуровневые структуры данных. Программный код на Python организовывается в функции и классы, которые могут объединяться в модули, а они в свою очередь могут быть объединены в пакеты. Python обычно используется как интерпретируемый, но может быть скомпилирован в байт-код Java и в MSIL (в рамках платфоры .NET). Разработчики языка Python придерживаются определённой философии программирования, называемой «The Zen of Python» («Дзен Питона» или «Дзен Пайтона»)', image: img, sessionid: 1},
  {topicid:1, title: 'Язык программирования Python4', body: 'Python — это высокоуровневый язык программирования общего назначения, который используется в том числе и для разработки веб-приложений. Язык ориентирован на повышение производительности разработчика и читаемости кода.Правильное русское произношение названия языка программирования — Пайтон, но чаще используется искажённое — Питон. Python поддерживает несколько парадигм программирования: структурное, объектно-ориентированное, функциональное, императивное и аспектно-ориентированное. В языке присутствет динамическая типизация, автоматическое управление памятью, полная интроспекция, механизм обработки исключений, поддержка многопоточных вычислений и удобные высокоуровневые структуры данных. Программный код на Python организовывается в функции и классы, которые могут объединяться в модули, а они в свою очередь могут быть объединены в пакеты. Python обычно используется как интерпретируемый, но может быть скомпилирован в байт-код Java и в MSIL (в рамках платфоры .NET). Разработчики языка Python придерживаются определённой философии программирования, называемой «The Zen of Python» («Дзен Питона» или «Дзен Пайтона»)', image: img, sessionid: 1},
  {topicid:2, title: 'Что такое ререндеринг?', body: 'Существует 2 основные стадии, которым следует уделять пристальное внимание, когда речь заходит о производительности в React:первоначальный рендеринг (initial rendering) — происходит, когда компонент впервые появляется на экране;ререндеринг — второй и последующие рендеринги компонента.Ререндеринг происходит, когда React необходимо обновить приложение некоторыми данными. Обычно, это является результатом действий пользователя, получения ответа на асинхронный запрос или публикацию при подписке (паттерн "pub/sub" — публикация/подписка или издатель/подписчик) на определенные данные.',  image: img, sessionid: 1},
  {topicid:2, title: 'Что такое ререндеринг?', body: 'Существует 2 основные стадии, которым следует уделять пристальное внимание, когда речь заходит о производительности в React:первоначальный рендеринг (initial rendering) — происходит, когда компонент впервые появляется на экране;ререндеринг — второй и последующие рендеринги компонента.Ререндеринг происходит, когда React необходимо обновить приложение некоторыми данными. Обычно, это является результатом действий пользователя, получения ответа на асинхронный запрос или публикацию при подписке (паттерн "pub/sub" — публикация/подписка или издатель/подписчик) на определенные данные.',  image: img, sessionid: 1},
  {topicid:2, title: 'Что такое ререндеринг?', body: 'Существует 2 основные стадии, которым следует уделять пристальное внимание, когда речь заходит о производительности в React:первоначальный рендеринг (initial rendering) — происходит, когда компонент впервые появляется на экране;ререндеринг — второй и последующие рендеринги компонента.Ререндеринг происходит, когда React необходимо обновить приложение некоторыми данными. Обычно, это является результатом действий пользователя, получения ответа на асинхронный запрос или публикацию при подписке (паттерн "pub/sub" — публикация/подписка или издатель/подписчик) на определенные данные.',  image: img, sessionid: 1},
  {topicid:2, title: 'Что такое ререндеринг?', body: 'Существует 2 основные стадии, которым следует уделять пристальное внимание, когда речь заходит о производительности в React:первоначальный рендеринг (initial rendering) — происходит, когда компонент впервые появляется на экране;ререндеринг — второй и последующие рендеринги компонента.Ререндеринг происходит, когда React необходимо обновить приложение некоторыми данными. Обычно, это является результатом действий пользователя, получения ответа на асинхронный запрос или публикацию при подписке (паттерн "pub/sub" — публикация/подписка или издатель/подписчик) на определенные данные.',  image: img, sessionid: 1},
  {topicid:3, title: 'Bun: новый рантайм для JavaScript', body: 'Среда выполнения/рантайм(runtime) в информатике — вычислительное окружение, необходимое для выполнения компьютерной программы и доступное во время выполнения компьютерной программы. В среде выполнения, как правило, невозможно изменение исходного текста программы, но может осуществляться доступ к переменным окружения операционной системы, таблицам объектов и модулей разделяемых библиоте', image: img, sessionid: 1},
  {topicid:3, title: 'Bun: новый рантайм для JavaScript', body: 'Среда выполнения/рантайм(runtime) в информатике — вычислительное окружение, необходимое для выполнения компьютерной программы и доступное во время выполнения компьютерной программы. В среде выполнения, как правило, невозможно изменение исходного текста программы, но может осуществляться доступ к переменным окружения операционной системы, таблицам объектов и модулей разделяемых библиоте', image: img, sessionid: 1},
  {topicid:3, title: 'Bun: новый рантайм для JavaScript', body: 'Среда выполнения/рантайм(runtime) в информатике — вычислительное окружение, необходимое для выполнения компьютерной программы и доступное во время выполнения компьютерной программы. В среде выполнения, как правило, невозможно изменение исходного текста программы, но может осуществляться доступ к переменным окружения операционной системы, таблицам объектов и модулей разделяемых библиоте', image: img, sessionid: 1},
  {topicid:3, title: 'Bun: новый рантайм для JavaScript', body: 'Среда выполнения/рантайм(runtime) в информатике — вычислительное окружение, необходимое для выполнения компьютерной программы и доступное во время выполнения компьютерной программы. В среде выполнения, как правило, невозможно изменение исходного текста программы, но может осуществляться доступ к переменным окружения операционной системы, таблицам объектов и модулей разделяемых библиоте', image: img, sessionid: 1},
]



const createStruct = async () => {
  const token = await getToken()
  console.log(token)
  await User.create({
    firstname: 'admin',
    lastname: 'adminovich',
    username: 'admin',
    email: 'admin@admin.com',
    password: '123456',
    token: token
  });

  const topics = ['Python', 'JavaScript', 'Java']

  for (let topic of topics) {
    await Topic.create({
      topicname: topic
    });
  }
  const code = base64_encode('./files/1_zxixptvl4rzkx3eduj38xw.jpeg')
  const url = `https://netpoint-dc.com/blog/wp-content/uploads/2019/10/1_zxixptvl4rzkx3eduj38xw.jpeg`

  for (let post of posts) {
    await Post.create({
      title: post.title,
      body: post.body,
      image: url,
      TopicTopicid: post.topicid,
      UserUserid: post.sessionid,
    })
  }
}


await createStruct()